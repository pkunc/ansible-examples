#!/usr/bin/env ansible-playbook
# fetch-kubeconfig.yml

# Example usage:
#    Download kube config file from a remote server
#      ansible-playbook fetch-kubeconfig -i server.example.com,

---
- name: Download kube config files from Kubernetes Server
  hosts: servers

  tasks:

    - name: Detect RKE2 kubeconfig file
      ansible.builtin.stat:
        path: /etc/rancher/rke2/rke2.yaml
      register: rke2_result

    - name: Detect K3s kubeconfig file
      ansible.builtin.stat:
        path: /etc/rancher/k3s/k3s.yaml
      register: k3s_result

    - name: Set the kubeconfig file path to RKE2
      ansible.builtin.set_fact:
        kubeconfig: /etc/rancher/rke2/rke2.yaml
      when: rke2_result.stat.exists

    - name: Set the kubeconfig file path to K3s
      ansible.builtin.set_fact:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      when: k3s_result.stat.exists

    - name: 'Download kube config file from the server {{ ansible_host }}'
      become: true
      ansible.builtin.fetch:
        src: '{{ kubeconfig }}'
        dest: '~/.kube/{{ ansible_host }}.yml'
        flat: true

    - name: Change the access rights for the downloaded file
      ansible.builtin.file:
        path: '~/.kube/{{ ansible_host }}.yml'
        mode: 'u=rw,g=,o='
      delegate_to: localhost
      run_once: true

    - name: 'Replace default values in downloaded files with hostname: {{ ansible_host }}'
      ansible.builtin.replace:
        path: '~/.kube/{{ ansible_host }}.yml'
        regexp: '{{ item }}'
        replace: '{{ ansible_host }}'
      loop:
        - 'default'
        - '127.0.0.1'
      delegate_to: localhost
      run_once: true
